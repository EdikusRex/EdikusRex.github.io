{"version":3,"sources":["components/ChatComposer.jsx","components/MessageBubble.jsx","components/faqs.js","components/FAQ.jsx","components/GreetingCard.jsx","components/ChatWindow.jsx","components/HeaderNav.jsx","hooks/useEscape.js","components/Chatbot.jsx","axios-config.js","theme.js","images/spr_logo.png","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["ChatComposer","onSend","textFieldRef","useRef","sendMessage","current","test","innerText","message","trim","useEffect","textField","onEnter","e","key","preventDefault","addEventListener","removeEventListener","className","ref","contentEditable","onClick","size","MessageBubble","text","senderID","showFeedback","onFeedbackGiven","timestamp","type","class","aboutSPR","aboutCreators","helpMessage","suggestions","SuggestedOptions","align","GreetingCard","description","split","map","i","src","alt","ChatWindow","conversation","suggestionsOpen","onSuggestionClick","chatWindowRef","scrollTo","top","scrollHeight","left","behavior","conversationElements","length","msg","responseType","sender","HeaderNav","callback","onEscape","window","useEscape","suggestionsToggle","Chatbot","props","useState","setSuggestionsOpen","query","setQuery","setConversation","responseCount","setResponseCount","s","mockResponse","resp","a","answerMessages","Date","now","console","error","postMessage","id","isPositive","answerIndex","findIndex","payload","sentiment","question","answer","axios","post","defaults","baseURL","headers","theme","color","primary","accent","secondary","light","borderRadius","shadow","menuBar","Home","Container","fluid","style","height","padding","overflow","Row","paddingTop","Col","Image","poppy_logo","width","filter","paddingBottom","to","Button","variant","marginLeft","marginRight","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76eb2136.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Send } from \"react-feather\";\r\nimport \"../style/chatComposer.css\";\r\n\r\nexport default function ChatComposer({ onSend }) {\r\n\r\nlet textFieldRef = useRef(null);\r\n\r\n// Takes the message from the content editable field and sends it out\r\nfunction sendMessage() {\r\n    const emptyField = /^\\s*$/g;\r\n    if (\r\n    !textFieldRef.current ||\r\n    emptyField.test(textFieldRef.current.innerText)\r\n    )\r\n    return;\r\n    let message = textFieldRef.current.innerText.trim();\r\n    textFieldRef.current.innerText = \"\";\r\n    onSend(message);\r\n}\r\n\r\n// Send Message on Enter Pressed\r\nuseEffect(() => {\r\n    const textField = textFieldRef.current;\r\n    if (!textField) return;\r\n    const onEnter = (e) => {\r\n    if (e.key === \"Enter\") {\r\n        e.preventDefault();\r\n        sendMessage();\r\n    }\r\n    };\r\n    textField.addEventListener(\"keypress\", onEnter);\r\n    return () => textField.removeEventListener(\"keypress\", onEnter);\r\n});\r\n\r\nreturn (\r\n    <div className=\"menuBarStyle ChatComposer\">\r\n    <div className=\"contentStyle\">\r\n        <div\r\n        className=\"txtFieldStyle\"\r\n        ref={textFieldRef}\r\n        contentEditable=\"true\"\r\n        ></div>\r\n        <button className=\"sendButtonStyle\" onClick={() => sendMessage()}>\r\n        <Send size={20} />\r\n        <p className=\"buttonTextStyle\">Send</p>\r\n        </button>\r\n    </div>\r\n    </div>\r\n);\r\n}","/** @jsxImportSource @emotion/react */\r\nimport '../style/chatMsg.css';\r\nimport '../style/colors.css';\r\n\r\nexport default function MessageBubble({\r\ntext,\r\n/* senderID: SENDER_USER when false, SENDER_BOT when true */\r\nsenderID,\r\nshowFeedback,\r\nonFeedbackGiven,\r\ntimestamp,\r\n})\r\n\r\n{\r\n\r\nreturn (\r\n\r\n    /* wrapper div for messages */\r\n    <div className = {`msgWrapper ${ senderID ? \"msgWrapperBot\" : \"msgWrapperUser\" } `}>\r\n        {/* actual message text */}\r\n        <p className = {` msg ${ senderID ? \"msgBot\" : \"msgUser\" } `}>\r\n            {text}\r\n        </p>\r\n        <br></br>\r\n        {/* feedback buttons */}\r\n        { senderID && showFeedback && (\r\n            <>\r\n            <button type = \"button\" className = \"feedbackIcon feedbackIconPos\" onClick = {() => onFeedbackGiven(timestamp, true)}>\r\n                <i class = \"bi bi-hand-thumbs-up\"></i>\r\n            </button>\r\n            <button type = \"button\" className = \"feedbackIcon feedbackIconNeg\" onClick = {() => onFeedbackGiven(timestamp, true)}>\r\n                <i class=\"bi bi-hand-thumbs-down\"></i>\r\n            </button>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n}\r\n","const suggestions = [\r\n  \"How big is Swanton Pacific Ranch?\",\r\n  \"Where did Swanton get its name?\",\r\n  \"What group of Indigenous Peoples lived in the Swanton area before Spanish colonization?\",\r\n  \"What was the original name of the land grant that Swanton was part of?\",\r\n  \"How many plants have been identified in the Swanton/Scott Creek Watershed?\",\r\n  \"What is a fun fact about the Rancho?\",\r\n  \"How do I plan a visit to Swanton?\",\r\n];\r\n\r\nconst aboutSPR = [`Swanton Pacific Ranch (SPR) is a 3200-acre satellite property of California Polytechnic State University \r\nlocated in Santa Cruz County off Highway 1, ~60 miles south of San Francisco. The land is composed of a majestic redwood forest, \r\nlush riverine ecosystems, and expansive coastal grassland overlooking the bay and the Pacific Ocean. It was donated to Cal Poly \r\nby alumni Al Smith in 1993. Smith’s goal was for the land to be “maintained as a working ranch and used exclusively for \r\nagriculture, recreational, educational purposes.” Since its donation, the Ranch has been managed by Cal Poly’s College of \r\nAgriculture, Food and Environmental Sciences. Faculty, graduate students, and undergraduates actively pursue research \r\nopportunities, utilizing the forest, range, and watershed resources within the ranch.`,\r\n`Due to the lack of signage off of Highway 1 and the inability of ranch staff to constantly be availiable to field questions, \r\nsharing the rich history and research opportunities of Swanton Pacific Ranch has always been a problem. Due to a fire destroying \r\nmuch of the ranch (including many landmarks and a lot of physical data) in late summer 2020, the necessity to preserve and spread \r\nknowledge of the ranch has become a priority. So, a plan was devised to provide access to this information through an interactive, \r\nremotely updated, creative outreach tool for researchers and the public, requiring no mediation...and Poppy the Chatbot was born!\r\n`];\r\n\r\nconst aboutCreators = [`Poppy was brought to you by Cal Poly students from many different majors, disciplines, backgrounds. \r\nShe is still a work in progress, so if you find any issues you would like to report, please contact:`, \r\n\"Poppy Software Team\", \"swantonpoppycp@gmail.com\"];\r\n\r\nconst helpMessage = [\"Poppy needs your help to ensure that she can stay up and running to educate future generations on SPR's rich history!\", \r\n\"Interested in donating? Contact:\", \"Jeanine Scaramozzino\", \"swantonpoppycp@gmail.com\"];\r\n\r\nexport default suggestions;\r\nexport {aboutSPR, aboutCreators, helpMessage};\r\n","\r\nimport suggestions from \"./faqs\";\r\nimport {aboutSPR, aboutCreators, helpMessage} from \"./faqs\";\r\nimport '../style/faq.css';\r\n\r\n// function sendMessage(suggestion){\r\n\r\n// }\r\n\r\nexport default function SuggestedOptions() {\r\n  return (\r\n    <div class=\"container\">\r\n      <div class=\"row text-white center-block\">\r\n        <div class=\"col\" align=\"center\">\r\n          <div class=\"bubble\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">Suggested Questions</h4>\r\n              <h6>Click on any of the questions to ask Poppy!</h6>\r\n              <div class=\"btn-group-vertical\">\r\n                <button onClick=\"sendMessage(suggestions[0])\" type=\"button\" class=\"roundbutton\">{suggestions[0]}</button>\r\n                <button onClick=\"sendMessage(suggestions[1])\" type=\"button\" class=\"roundbutton\">{suggestions[1]}</button>\r\n                <button onClick=\"sendMessage(suggestions[2])\" type=\"button\" class=\"roundbutton\">{suggestions[2]}</button>\r\n                <button onClick=\"sendMessage(suggestions[3])\" type=\"button\" class=\"roundbutton\">{suggestions[3]}</button>\r\n                <button onClick=\"sendMessage(suggestions[4])\" type=\"button\" class=\"roundbutton\">{suggestions[4]}</button>\r\n                <button onClick=\"sendMessage(suggestions[5])\" type=\"button\" class=\"roundbutton\">{suggestions[5]}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\" align=\"center\">\r\n          <div class=\"bubble\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">About Swanton Pacific Ranch</h4>\r\n              <h6><br/>{aboutSPR[0]}<p/><br/>{aboutSPR[1]}</h6>\r\n            </div> \r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"w-70\"></div>\r\n\r\n        <div class=\"col\" align=\"center\">\r\n          <div class=\"bubble\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">About the Creators</h4>\r\n              <h6><br/>{aboutCreators[0]}<p/>\r\n                  {aboutCreators[1]}<br/>\r\n                  {aboutCreators[2]}</h6>\r\n            </div> \r\n          </div>\r\n        </div>\r\n        <div class=\"col\" align=\"center\">\r\n          <div class=\"bubble\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">Want to Help?</h4>\r\n              <h6><br/>{helpMessage[0]}<br/>\r\n                  {helpMessage[1]}<p/>\r\n                  {helpMessage[2]}<br/>\r\n                  {helpMessage[3]}\r\n              </h6>\r\n            </div> \r\n          </div> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n","/** @jsxImportSource @emotion/react */\r\nimport '../style/greetingCard.css';\r\n\r\nexport default function GreetingCard() {\r\n  const titleText = \"Welcome to Swanton Poppy Chat!\";\r\n  const descriptionText = `Ask anything you want to know about the ranch!\r\n  Check out some commonly asked questions by clicking the question mark above.`;\r\n  const logoSrc = `/logo512.png`;\r\n  const logoAltText = `Swanton Poppy Logo`;\r\n\r\n  const description = descriptionText.split(\"\\n\").map((text, i) => (\r\n    <p key={i} className=\"descriptionStyle\">\r\n      {text}\r\n    </p>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"cardStyles\">\r\n      <img className=\"logoStyle\" src={logoSrc} alt={logoAltText} />\r\n      <h2 className=\"titleStyle\">{titleText}</h2>\r\n      {description}\r\n    </div>\r\n  );\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useEffect, useRef } from \"react\";\r\nimport MessageBubble from \"./MessageBubble\";\r\nimport SuggestedOptions from \"./FAQ\";\r\nimport GreetingCard from \"./GreetingCard\";\r\nimport \"../style/chatWindow.css\";\r\n\r\nexport default function ChatWindow({\r\nconversation,\r\nsuggestionsOpen,\r\nonSend,\r\nonSuggestionClick,\r\nonFeedbackGiven,\r\n}) {\r\n\r\nconst chatWindowRef = useRef(null);\r\n\r\n// Scroll to the bottom of the chat window every time a new message is sent\r\nuseEffect(() => {\r\n    if (!chatWindowRef.current || suggestionsOpen) return;\r\n    chatWindowRef.current.scrollTo({\r\n    top: chatWindowRef.current.scrollHeight,\r\n    left: 0,\r\n    behavior: \"smooth\",\r\n    });\r\n});\r\n\r\n/**\r\n * Create message bubbles from the current conversation\r\n */\r\nconst conversationElements = conversation.length ? (\r\n    conversation.map((msg) => (\r\n    <MessageBubble\r\n        key={msg.timestamp}\r\n        text={msg.text}\r\n        timestamp={msg.timestamp}\r\n        showFeedback={msg.responseType === \"answer\"}\r\n        senderID={msg.sender !== \"user\"}\r\n        onFeedbackGiven={onFeedbackGiven}\r\n    />\r\n    ))\r\n) : (\r\n    <GreetingCard />\r\n);\r\nreturn (\r\n    <div className=\"ChatWindow windowStyles\" ref={chatWindowRef}>\r\n    {suggestionsOpen ? (\r\n        <SuggestedOptions\r\n        onSend={onSend}\r\n        onSuggestionClick={onSuggestionClick}\r\n        />\r\n    ) : (\r\n        conversationElements\r\n    )}\r\n    </div>\r\n);\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport { HelpCircle, XCircle } from \"react-feather\";\r\nimport useEscape from \"../hooks/useEscape\";\r\nimport \"../style/chatHeader.css\";\r\n\r\nexport default function HeaderNav({ onSuggestionClick, suggestionsOpen }) {\r\n\r\n  useEscape(() => {\r\n    suggestionsOpen && onSuggestionClick();\r\n  });\r\n\r\n  const suggestionsToggle = suggestionsOpen ? (\r\n    <XCircle size={30} className=\"helpIcon\" onClick={() => onSuggestionClick()} />\r\n  ) : (\r\n    <HelpCircle\r\n      className=\"helpIcon\"\r\n      size={30}\r\n      onClick={() => onSuggestionClick()}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <header className=\"chatHeader\">\r\n\r\n      <h2 className=\"chatHeaderTitle\">\r\n        {suggestionsOpen ? \"FAQs\" : \"Swanton Pacific Ranch Chat\" }\r\n      </h2>\r\n\r\n      {suggestionsToggle}\r\n    </header>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport default function useEscape(callback) {\r\n  // calls the given callback when the \"q\" key is pressed\r\n  const onEscape = (e) => e.key === \"q\" && callback(e);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keypress\", onEscape);\r\n    return () => window.removeEventListener(\"keypress\", onEscape);\r\n  });\r\n}\r\n","    /** @jsxImportSource @emotion/react */\r\n    import { useEffect, useState } from \"react\";\r\n    import ChatComposer from \"./ChatComposer\";\r\n    import ChatWindow from \"./ChatWindow\";\r\n    import HeaderNav from \"./HeaderNav\";\r\n    import axios from \"axios\";\r\n    import \"../style/chatbot.css\";\r\n\r\nexport default function Chatbot(props) {\r\n    const SENDER_USER = \"user\";\r\n    const SENDER_BOT = \"bot\";\r\n\r\n    const [suggestionsOpen, setSuggestionsOpen] = useState(false);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [conversation, setConversation] = useState([]);\r\n    const [responseCount, setResponseCount] = useState(0); // AI mocking\r\n\r\n    /**\r\n     * Toggles the suggestions\r\n     */\r\n    let onSuggestionClick = () => {\r\n        setSuggestionsOpen((s) => !s);\r\n    };\r\n\r\n    /**\r\n     * Every time the user sends a new question, get the answer from the API and\r\n     * add it to the conversation.\r\n     */\r\n    useEffect(() => {\r\n        if (query === \"\") return;\r\n        // let payload = { message: query };\r\n\r\n        /* --------------------------------------------------------*/\r\n        /* AI mock */\r\n        function mockResponse() {\r\n            let resp = \"Placeholder response \" + responseCount;\r\n            setResponseCount(responseCount + 1);\r\n            return [{ text: resp }];\r\n        }\r\n        /* --------------------------------------------------------*/\r\n\r\n        async function postMessage() {\r\n            try {\r\n                // const response = await axios.post(\"api/webhooks/rest/webhook\", payload);\r\n                // const answerMessages = response.data.map(({ text }, i) => ({\r\n                const answerMessages = mockResponse().map(({ text }, i) => ({\r\n                    text,\r\n                    sender: SENDER_BOT,\r\n                    timestamp: Date.now() + i,\r\n                    responseType: i === 0 ? \"answer\" : \"followUp\",\r\n                }));\r\n                setQuery(\"\");\r\n                setConversation([...conversation, ...answerMessages]);\r\n            } catch (err) {\r\n                console.error(err);\r\n                return;\r\n            }\r\n        }\r\n\r\n        postMessage();\r\n    }, [query, conversation, responseCount]);\r\n\r\n    /**\r\n     * Adds the user's message to the conversation, passes message to the bot\r\n     */\r\n    let sendMessage = (message) => {\r\n        setConversation([\r\n            ...conversation,\r\n            { text: message, sender: SENDER_USER, timestamp: Date.now() },\r\n        ]);\r\n        setQuery(message);\r\n    };\r\n    /**\r\n     * Handles user feedback about chatbot answer accuracy.\r\n     */\r\n    function onFeedbackGiven(id, isPositive) {\r\n        // We're gonna need a real endpoint, but for testing purposes:\r\n        let answerIndex = conversation.findIndex(\r\n            (message) => message.timestamp === id\r\n        );\r\n        if (answerIndex === -1) return;\r\n        const payload = {\r\n            sentiment: isPositive ? \"positive\" : \"negative\",\r\n            question: conversation[answerIndex - 1].text,\r\n            answer: conversation[answerIndex].text,\r\n        };\r\n        axios.post(\"log/query\", payload);\r\n    }\r\n\r\n    return (\r\n        <main className=\"Chatbot chatbotStyle\">\r\n            <HeaderNav\r\n                onSuggestionClick={onSuggestionClick}\r\n                suggestionsOpen={suggestionsOpen}\r\n            />\r\n            <ChatWindow\r\n                conversation={conversation}\r\n                suggestionsOpen={suggestionsOpen}\r\n                onSend={sendMessage}\r\n                onSuggestionClick={onSuggestionClick}\r\n                onFeedbackGiven={onFeedbackGiven}\r\n            />\r\n            {!suggestionsOpen && <ChatComposer onSend={sendMessage} />}\r\n        </main>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://swantonpoppy.org/\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n","const theme = {\r\n  color: {\r\n    primary: \"#fff\",\r\n    accent: \"#36863A\",\r\n    secondary: \"#133F2E\",\r\n    light: \"#EBEBEB\",\r\n    error: \"#d43646\",\r\n  },\r\n  borderRadius: [\"10px\", \"15px\", \"20px\"],\r\n  shadow: {\r\n    menuBar: \"0px 1px 18px 0px rgba(19, 63, 46, 0.2)\",\r\n    message: \"0px 10px 15px 0px rgba(19, 63, 46, 0.05)\",\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","export default __webpack_public_path__ + \"static/media/spr_logo.f4211a78.png\";","//import background from \"../images/poppymtn2.jpg\";\r\nimport poppy_logo from \"../images/spr_logo.png\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Image, Button, Container, Row, Col} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"../style/home.scss\"\r\n\r\n\r\nexport default function Home() {\r\n    return (\r\n        <Container fluid style={{height: \"94.8%\", padding:\"0\", overflow: \"hidden\"}}>\r\n        <div class=\"home_background\">\r\n            <Row style={{paddingTop:\"2rem\"}}>\r\n                <Col>\r\n                    <Image src={poppy_logo} height='300rem' width='300rem' style={{filter:\"drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))\"}}>\r\n                    </Image>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{paddingTop:\"5rem\", paddingBottom:\"2rem\", filter:\"drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))\"}}>\r\n                <Col>\r\n                    <Link to=\"/chatbot\">\r\n                        <Button variant='primary' id='btn-large' class='rounded-1 text-nowrap' >Chat with Poppy</Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{filter:\"drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))\"}}>\r\n                <Col>\r\n                <Link to=\"/suggestions\" marginLeft='50rem' marginRight='10rem'>\r\n                        <Button variant='primary' id='btn-small' class='rounded-1 text-nowrap'>FAQ</Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </Container>\r\n\r\n    );\r\n}\r\n","import Chatbot from \"./components/Chatbot\";\r\nimport \"./axios-config.js\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport theme from \"./theme.js\";\r\nimport SuggestedOptions from \"./components/FAQ\";\r\nimport Home from \"./components/Home\";\r\nimport './style/custom.scss';\r\nimport {} from \"./style/navbar.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>  \r\n        <Router>\r\n            <div class=\"topnav sticky-top\">\r\n                <div class=\"row\">\r\n                    <nav>\r\n                        <img src=\"/logo192.png\" height=\"46\" alt=\"poppy logo\"/>\r\n                        <Link to=\"/\">\r\n                            <button class=\"navbutton\" type=\"button\">\r\n                                Home\r\n                            </button>\r\n                        </Link>\r\n                        <Link to=\"/chatbot\">\r\n                            <button class=\"navbutton\" type=\"button\">\r\n                                Chat\r\n                            </button>\r\n                        </Link>\r\n                        <Link to=\"/suggestions\">\r\n                            <button class=\"navbutton\" type=\"button\">\r\n                                FAQ\r\n                            </button>\r\n                        </Link>\r\n                        \r\n                    </nav>\r\n\r\n                    {/* A <Routes> looks through its children <Route>s and\r\n                        renders the first one that matches the current URL. */}\r\n                    \r\n                </div>\r\n            </div>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home/>}/>\r\n                <Route path=\"/chatbot\" element={<Chatbot/>}/>\r\n                <Route path=\"/suggestions\" element={<SuggestedOptions/>}/>\r\n            </Routes>\r\n        </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './style/custom.scss';\r\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}